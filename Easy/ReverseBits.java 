public class Solution {
    // you need treat n as an unsigned value
    public int reverseBits(int n) {
        String bits = Integer.toBinaryString(n);
        int length = bits.length();
        char[] numbers = new char[32];
        int j =0;
        for(int i=0; i<32;i++){
            if(i < (32 - length))
                numbers[i] = "0".charAt(0);
            else{
                numbers[i] = bits.charAt(j);
                j++;
            }
        }
        
        String reversed = "";
        for(int i = 31;i>=0;i--){
            reversed += numbers[i];
        }
        Long decimal = Long.parseLong(reversed, 2);
        return decimal.intValue();
    }
}

/**
 * Another solution
 */
public class Solution {
    // you need treat n as an unsigned value
    public int reverseBits(int n) {
        int reversed = 0;
        for (int i = 0; i < 32; i++) {
            reversed = (reversed << 1) | (n & 1);
            n = (n >> 1);
        }
        return reversed;
    }
}